@model Consumer.Models.EventCustomerView

@{
    ViewData["Title"] = "CreateAsync";
}

<h1>CreateAsync</h1>

<h4>EventCustomer</h4>
<hr />
<div class="row">

    <form asp-action="CreateAsync">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        @*<div class="form-group">
                <label asp-for="Id" class="control-label"></label>
                <input asp-for="Id" class="form-control" />
                <span asp-validation-for="Id" class="text-danger"></span>
            </div>*@
        @*<div class="form-group">
                <label asp-for="CustomerId" class="control-label"></label>
                <input asp-for="CustomerId" class="form-control" />
                <span asp-validation-for="CustomerId" class="text-danger"></span>
            </div>*@
        @*<div class="form-group">
                <label asp-for="Customer.Name" class="control-label"></label>
                <input asp-for="Customer.Name" class="form-control" />
                <span asp-validation-for="Customer.Name" class="text-danger"></span>
            </div>*@

        @*<div class="col-md-4">*@
            <div class="form-group">
                <label asp-for="Customer.Name" class="control-label"></label>
                <select name="CustomerId" class='form-control' required>
                    <option value=""></option>
                    @foreach (var customer in Model.CustomersList)
                    {

                        <option value="@customer.Id">

                            @Html.DisplayFor(m => customer.Name)
                        </option>
                    }
                </select>
                <span asp-validation-for="CustomerId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="EventName" class="control-label"></label>
                <select name="EventId" class='form-control'  required>
                    <option value=""></option>
                    @foreach (var Event in Model.EventsList)
                    {

                        <option value="@Event.Id">

                            @Html.DisplayFor(m => Event.Name)
                            @Html.DisplayFor(m => Event.Cost)
                        </option>
                    }
                </select>
                <span asp-validation-for="EventId" class="text-danger"></span>
            </div>


            @*<div class="form-group">
                    <label asp-for="Customer.Name" class="control-label"></label>
                    <select asp-for="Customer.Name" class="form-control" />
                    <span asp-validation-for="Customer.Name" class="text-danger"></span>
                </div>*@
            @*<div class="form-group">
                    <label asp-for="EventId" class="control-label"></label>
                    <input asp-for="EventId" class="form-control" />
                    <span asp-validation-for="EventId" class="text-danger"></span>
                </div>*@
            @*<div class="form-group">
                    <label asp-for="EventName" class="control-label"></label>
                    <input asp-for="EventName" class="form-control" />
                    <span asp-validation-for="EventName" class="text-danger"></span>
                </div>*@
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="Paid" /> @Html.DisplayNameFor(model => model.Paid)
                </label>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>

    </form>



    <div>
        <a asp-action="Index">Back to List</a>
    </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
